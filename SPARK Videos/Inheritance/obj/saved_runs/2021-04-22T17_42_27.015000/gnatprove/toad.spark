{
  "spark": [
    {
      "name": "Toad",
      "sloc": [
        {
          "file": "toad.ads",
          "line": 4
        }
      ],
      "spark": "all"
    },
    {
      "name": "Toad.SellToKababShop",
      "sloc": [
        {
          "file": "toad.ads",
          "line": 11
        }
      ],
      "spark": "all"
    },
    {
      "name": "Toad.MakeFitForNursingHome",
      "sloc": [
        {
          "file": "toad.ads",
          "line": 14
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
  ],
  "session_map": {
    " 1": "C:\\Users\\Jonny\\Documents\\GitHub\\FASE-Practicals\\SPARK Videos\\Inheritance\\obj\\gnatprove\\toad__makefitfornursinghome",
    " 2": "C:\\Users\\Jonny\\Documents\\GitHub\\FASE-Practicals\\SPARK Videos\\Inheritance\\obj\\gnatprove\\toad__selltokababshop"
  },
  "proof": [
    {
      "file": "toad.ads",
      "line": 16,
      "col": 16,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "Toad.MakeFitForNursingHome",
        "sloc": [
          {
            "file": "toad.ads",
            "line": 14
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "toad.ads",
      "check_line": 16,
      "check_col": 16,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 2,
          "max_steps": 1,
          "max_time": 0.00000000000000E+00
        }
      }
    },
    {
      "file": "toad.adb",
      "line": 8,
      "col": 7,
      "rule": "VC_PRECONDITION",
      "severity": "medium",
      "entity": {
        "name": "Toad.SellToKababShop",
        "sloc": [
          {
            "file": "toad.ads",
            "line": 11
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 56,
              "time": 3.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 68,
              "time": 2.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        }
      ],
      "check_file": "toad.adb",
      "check_line": 8,
      "check_col": 7,
      "msg_id": 0,
      "session_dir": 2,
      "how_proved": "prover"
    },
    {
      "file": "toad.ads",
      "line": 12,
      "col": 14,
      "rule": "VC_POSTCONDITION",
      "severity": "medium",
      "entity": {
        "name": "Toad.SellToKababShop",
        "sloc": [
          {
            "file": "toad.ads",
            "line": 11
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.00000000000000E-02
            }
          },
          "transformations": {
            "trivial_true": [
            ]
          }
        },
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 99,
              "time": 3.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 157,
              "time": 3.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "toad.ads",
      "check_line": 12,
      "check_col": 14,
      "cntexmp": {
        "toad.adb": {
          "previous": {
          },
          "current": {
            "8": [
              {
                "name": "t",
                "value": "(Banger => (Filling => Meat, Rating => Spicy), Yorkshire => (Flour => GlutenFree, Egg => Duck))",
                "kind": "variable"
              }
            ],
            "9": [
              {
                "name": "t",
                "value": "(Banger => (Filling => Veg, Rating => Spicy), Yorkshire => (Flour => GlutenFree, Egg => Duck))",
                "kind": "variable"
              }
            ]
          }
        },
        "toad.ads": {
          "previous": {
          },
          "current": {
            "11": [
              {
                "name": "t",
                "value": "(Banger => (Filling => Veg, Rating => Spicy), Yorkshire => (Flour => GlutenFree, Egg => Duck))",
                "kind": "variable"
              }
            ],
            "12": [
              {
                "name": "t",
                "value": "(Banger => (Filling => Veg, Rating => Spicy), Yorkshire => (Flour => GlutenFree, Egg => Duck))",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 1,
      "session_dir": 2,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Toad",
          "sloc": [
            {
              "file": "toad.ads",
              "line": 4
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "Toad.MakeFitForNursingHome",
          "sloc": [
            {
              "file": "toad.ads",
              "line": 14
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Toad.MakeFitForNursingHome",
          "sloc": [
            {
              "file": "toad.ads",
              "line": 14
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Toad.MakeFitForNursingHome",
          "sloc": [
            {
              "file": "toad.ads",
              "line": 14
            }
          ]
        }
      }
    },
    {
      "assumptions": [
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Sausages.Contaminate",
            "sloc": [
              {
                "file": "sausages.ads",
                "line": 11
              }
            ]
          }
        },
        {
          "predicate": "CLAIM_EFFECTS",
          "arg": {
            "name": "Sausages.Varmere",
            "sloc": [
              {
                "file": "sausages.ads",
                "line": 15
              }
            ]
          }
        }
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Toad.SellToKababShop",
          "sloc": [
            {
              "file": "toad.ads",
              "line": 11
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.inline_trivial": 1.40625000000000E-01,
    "codepeer results": 4.51000014436431E-05,
    "init_why_sections": 6.16499979514629E-04,
    "gnatwhy3.transformations.detect_polymorphism": 0.00000000000000E+00,
    "globals/properties (advanced)": 8.99599981494248E-04,
    "gnatwhy3.transformations.eliminate_literal": 0.00000000000000E+00,
    "gnatwhy3.run_vcs": 1.09375000000000E-01,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 0.00000000000000E+00,
    "flow analysis": 2.96609988436103E-03,
    "gnatwhy3.transformations.simplify_formula": 0.00000000000000E+00,
    "marking": 3.64900013664737E-04,
    "translation of standard": 3.98920010775328E-03,
    "gnatwhy3.register_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_epsilon": 0.00000000000000E+00,
    "globals (basic)": 3.95500013837591E-04,
    "gnatwhy3.schedule_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.prepare_for_counterexmp": 0.00000000000000E+00,
    "gnatwhy3.save_session": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_inductive": 0.00000000000000E+00,
    "gnatwhy3.transformations.encoding_smt_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_unused_hypo": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_builtin": 0.00000000000000E+00,
    "gnatwhy3.transformations.discriminate_if_poly": 0.00000000000000E+00,
    "gnatwhy3.init": 4.68750000000000E-01
  }
}
