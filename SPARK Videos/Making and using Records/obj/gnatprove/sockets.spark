{
  "spark": [
    {
      "name": "Sockets",
      "sloc": [
        {
          "file": "sockets.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "Sockets.plugIn",
      "sloc": [
        {
          "file": "sockets.ads",
          "line": 14
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "sockets.ads",
      "line": 15,
      "col": 6,
      "rule": "GLOBAL_WRONG",
      "severity": "info",
      "entity": {
        "name": "Sockets.plugIn",
        "sloc": [
          {
            "file": "sockets.ads",
            "line": 14
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    }
  ],
  "session_map": {
    " 1": "C:\\Users\\Jonny\\Documents\\GitHub\\FASE-Practicals\\SPARK Videos\\Making and using Records\\obj\\gnatprove\\sockets__plugin"
  },
  "proof": [
    {
      "file": "sockets.ads",
      "line": 17,
      "col": 16,
      "rule": "VC_POSTCONDITION",
      "severity": "info",
      "entity": {
        "name": "Sockets.plugIn",
        "sloc": [
          {
            "file": "sockets.ads",
            "line": 14
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Valid",
              "steps": 5,
              "time": 2.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "sockets.ads",
      "check_line": 17,
      "check_col": 16,
      "session_dir": 1,
      "how_proved": "prover",
      "stats": {
        "CVC4": {
          "count": 1,
          "max_steps": 1,
          "max_time": 1.99999995529652E-02
        }
      }
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_POST",
        "arg": {
          "name": "Sockets.plugIn",
          "sloc": [
            {
              "file": "sockets.ads",
              "line": 14
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Sockets.plugIn",
          "sloc": [
            {
              "file": "sockets.ads",
              "line": 14
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Sockets.plugIn",
          "sloc": [
            {
              "file": "sockets.ads",
              "line": 14
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Sockets",
          "sloc": [
            {
              "file": "sockets.ads",
              "line": 1
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.inline_trivial": 0.00000000000000E+00,
    "codepeer results": 7.09000014467165E-05,
    "init_why_sections": 5.96900004893541E-04,
    "gnatwhy3.transformations.detect_polymorphism": 0.00000000000000E+00,
    "globals/properties (advanced)": 4.46199992438778E-04,
    "gnatwhy3.transformations.eliminate_literal": 1.56250000000000E-02,
    "gnatwhy3.run_vcs": 9.37500000000000E-02,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 0.00000000000000E+00,
    "flow analysis": 1.71920005232096E-03,
    "gnatwhy3.transformations.simplify_formula": 0.00000000000000E+00,
    "marking": 2.50399985816330E-04,
    "translation of standard": 4.03479998931289E-03,
    "gnatwhy3.register_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_epsilon": 0.00000000000000E+00,
    "globals (basic)": 2.31099998927675E-04,
    "gnatwhy3.schedule_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.prepare_for_counterexmp": 0.00000000000000E+00,
    "gnatwhy3.save_session": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_inductive": 0.00000000000000E+00,
    "gnatwhy3.transformations.encoding_smt_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_unused_hypo": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_builtin": 0.00000000000000E+00,
    "gnatwhy3.transformations.discriminate_if_poly": 0.00000000000000E+00,
    "gnatwhy3.init": 1.71875000000000E-01
  }
}
