{
  "spark": [
    {
      "name": "Levels",
      "sloc": [
        {
          "file": "levels.ads",
          "line": 1
        }
      ],
      "spark": "all"
    },
    {
      "name": "Levels.P1",
      "sloc": [
        {
          "file": "levels.ads",
          "line": 4
        }
      ],
      "spark": "all"
    }
  ],
  "flow": [
    {
      "file": "levels.ads",
      "line": 5,
      "col": 4,
      "rule": "DEPENDS_WRONG",
      "severity": "info",
      "entity": {
        "name": "Levels.P1",
        "sloc": [
          {
            "file": "levels.ads",
            "line": 4
          }
        ]
      },
      "check_tree": {
      },
      "how_proved": "flow"
    }
  ],
  "session_map": {
    " 1": "C:\\Users\\Jonny\\Documents\\GitHub\\FASE-Practicals\\SPARK Videos\\Video Example\\obj\\gnatprove\\levels__p1"
  },
  "proof": [
    {
      "file": "levels.adb",
      "line": 7,
      "col": 13,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Levels.P1",
        "sloc": [
          {
            "file": "levels.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 25,
              "time": 2.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 41,
              "time": 0
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "levels.adb",
      "check_line": 7,
      "check_col": 13,
      "cntexmp": {
        "levels.adb": {
          "previous": {
          },
          "current": {
            "7": [
              {
                "name": "n",
                "value": "Integer'Last",
                "kind": "variable"
              }
            ]
          }
        },
        "levels.ads": {
          "previous": {
          },
          "current": {
            "4": [
              {
                "name": "n",
                "value": "Integer'Last",
                "kind": "variable"
              },
              {
                "name": "s",
                "value": "0",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 0,
      "session_dir": 1,
      "how_proved": "prover"
    },
    {
      "file": "levels.adb",
      "line": 7,
      "col": 24,
      "rule": "VC_OVERFLOW_CHECK",
      "severity": "medium",
      "entity": {
        "name": "Levels.P1",
        "sloc": [
          {
            "file": "levels.ads",
            "line": 4
          }
        ]
      },
      "check_tree": [
        {
          "proof_attempts": {
            "CVC4": {
              "result": "Unknown (unknown)",
              "steps": 25,
              "time": 2.00000000000000E-02
            },
            "CVC4_CE": {
              "result": "Unknown (unknown)",
              "steps": 41,
              "time": 2.00000000000000E-02
            }
          },
          "transformations": {
          }
        }
      ],
      "check_file": "levels.adb",
      "check_line": 7,
      "check_col": 24,
      "cntexmp": {
        "levels.adb": {
          "previous": {
          },
          "current": {
            "7": [
              {
                "name": "n",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "s",
                "value": "Integer'Last",
                "kind": "variable"
              }
            ]
          }
        },
        "levels.ads": {
          "previous": {
          },
          "current": {
            "4": [
              {
                "name": "n",
                "value": "0",
                "kind": "variable"
              },
              {
                "name": "s",
                "value": "Integer'Last",
                "kind": "variable"
              }
            ]
          }
        }
      },
      "msg_id": 1,
      "session_dir": 1,
      "how_proved": "prover"
    }
  ],
  "assumptions": [
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_EFFECTS",
        "arg": {
          "name": "Levels.P1",
          "sloc": [
            {
              "file": "levels.ads",
              "line": 4
            }
          ]
        }
      }
    },
    {
      "assumptions": [
      ],
      "claim": {
        "predicate": "CLAIM_AORTE",
        "arg": {
          "name": "Levels",
          "sloc": [
            {
              "file": "levels.ads",
              "line": 1
            }
          ]
        }
      }
    }
  ],
  "timings": {
    "gnatwhy3.transformations.inline_trivial": 1.87500000000000E-01,
    "codepeer results": 1.65200006449595E-04,
    "init_why_sections": 6.89300009980798E-04,
    "gnatwhy3.transformations.detect_polymorphism": 0.00000000000000E+00,
    "globals/properties (advanced)": 4.03999991249293E-04,
    "gnatwhy3.transformations.eliminate_literal": 0.00000000000000E+00,
    "gnatwhy3.run_vcs": 1.09375000000000E-01,
    "gnatwhy3.transformations.eliminate_algebraic_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_definition_if_poly": 0.00000000000000E+00,
    "flow analysis": 1.19360000826418E-03,
    "gnatwhy3.transformations.simplify_formula": 0.00000000000000E+00,
    "marking": 2.66199989710003E-04,
    "translation of standard": 4.37940005213022E-03,
    "gnatwhy3.register_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_epsilon": 0.00000000000000E+00,
    "globals (basic)": 2.41300003835931E-04,
    "gnatwhy3.schedule_vcs": 0.00000000000000E+00,
    "gnatwhy3.transformations.prepare_for_counterexmp": 0.00000000000000E+00,
    "gnatwhy3.save_session": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_inductive": 0.00000000000000E+00,
    "gnatwhy3.transformations.encoding_smt_if_poly": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_unused_hypo": 0.00000000000000E+00,
    "gnatwhy3.transformations.eliminate_builtin": 0.00000000000000E+00,
    "gnatwhy3.transformations.discriminate_if_poly": 0.00000000000000E+00,
    "gnatwhy3.init": 1.40625000000000E-01
  }
}
